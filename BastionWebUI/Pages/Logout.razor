@page "/logout"
@using System.Net.Http.Headers
@inject IJSRuntime JS
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>Logging out...</h3>

@code {
    protected override async Task OnInitializedAsync()
    {
        // Retrieve JWT token from localStorage
        var token = await JS.InvokeAsync<string>("localStorage.getItem", "jwtToken");

        if (string.IsNullOrEmpty(token))
        {
            // No token, redirect to login page
            Navigation.NavigateTo("/login");
            return;
        }

        // Prepare the HTTP request
        var requestMessage = new HttpRequestMessage(HttpMethod.Post, "http://localhost:1234/auth/logout");
        requestMessage.Headers.Authorization = new AuthenticationHeaderValue("Bearer", token);

        // Send the request to log out
        var response = await Http.SendAsync(requestMessage);

        if (response.IsSuccessStatusCode)
        {
            // Remove the JWT token from localStorage
            await JS.InvokeVoidAsync("localStorage.removeItem", "jwtToken");

            // Redirect the user to the login page or another page
            Navigation.NavigateTo("/login");
        }
        else
        {
            // Handle logout failure
            var errorResponse = await response.Content.ReadAsStringAsync();
            Console.WriteLine($"Logout failed: {errorResponse}");

            // Optionally, redirect to an error page or show a message
            Navigation.NavigateTo("/error");
        }
    }
}