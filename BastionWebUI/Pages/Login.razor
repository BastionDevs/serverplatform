@page "/login"
@using MudBlazor
@inject HttpClient Http

<MudContainer MaxWidth="MaxWidth.Medium">
    <MudCard>
        <MudCardContent>
            <MudTextField Label="Username" @bind-Value="username" Variant="Variant.Filled" FullWidth />
            <MudTextField Label="Password" @bind-Value="password" Variant="Variant.Filled" FullWidth InputType="InputType.Password" />
            <MudButton OnClick="HandleLogin" Color="Color.Primary" Variant="Variant.Filled">Login</MudButton>
        </MudCardContent>
    </MudCard>
</MudContainer>

@code {
    private string username = string.Empty;
    private string password = string.Empty;
    private string errorMessage = string.Empty;

    private async Task HandleLogin()
    {
        // Check if username and password are provided
        if (string.IsNullOrWhiteSpace(username) || string.IsNullOrWhiteSpace(password))
        {
            errorMessage = "Username or password cannot be empty.";
            return;
        }

        try
        {
            var loginData = new
            {
                username = username,
                password = password
            };

            // Send POST request to backend API for authentication
            var response = await Http.PostAsJsonAsync("/auth", loginData);

            if (response.IsSuccessStatusCode)
            {
                // If login is successful, handle the received token
                var token = await response.Content.ReadAsStringAsync();
                Console.WriteLine($"Login successful! Token: {token}");

                // Here you can store the token for further authenticated requests
                // Example: LocalStorage.SetItem("authToken", token);
                errorMessage = string.Empty; // Clear any previous error message
            }
            else
            {
                // Handle invalid login attempt
                errorMessage = "Invalid username or password.";
            }
        }
        catch (Exception ex)
        {
            // Handle any errors with the request
            errorMessage = $"Error: {ex.Message}";
        }
    }
}
